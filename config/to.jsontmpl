{
	"root": {
		"templates": {
			"html": '''
<html>
<body>
{{range $c := elementChildren .}}
	{{dynamicTemplate $c.Element $c}}
{{end}}
</body>
</html>

{{define "HTMLAttributes"}}{{with .Data}}{{with .Attributes}} {{attributesToHTML .}}{{end}}{{end}}{{end}}
{{define "children"}}
	{{- range $c := elementChildren . -}}
		{{- dynamicTemplate $c.Element $c -}}
	{{- end -}}
{{end}}
'''
		}	
	},
	"elements": {
		"Title": {
			"type": "hanging",
			"delimiter": "=",
			"templates": {
				"html": '''
<h1 {{- template "HTMLAttributes" .}}>
	{{template "children" .}}
</h1>
'''
			}
		},
		"Subtitle": {
			"type": "walled",
			"delimiter": "_",
			"templates": {
				"html": '''{{template "children" .}}'''
			}
		},
		"Heading": {
			"type": "rankedHanging",
			"delimiter": "=",
			"templates": {
				"html": '''
{{$_ := setData . "Attributes" (setDefault .Data.Attributes "id" .TextContent)}}
<h{{.Data.rank}} {{- template "HTMLAttributes" .}}>
	{{template "children" .}}
</h{{.Data.rank}}>
'''
			}
		},
		"NumberedHeading": {
			"type": "rankedHanging",
			"delimiter": "#",
			"templates": {
				"html": '''
{{$_ := setData . "Attributes" (setDefault .Data.Attributes "id" .TextContent)}}
<h{{.Data.rank}} {{- template "HTMLAttributes" .}}>
	<span style="float:left">{{.Data.sequentialNumber}}&nbsp;</span>
	{{template "children" .}}
</h{{.Data.rank}}>
'''
			}
		},
		"Blockquote": {
			"type": "walled",
			"delimiter": ">",
			"templates": {
				"html": '''
<blockquote {{- template "HTMLAttributes" .}}>
	{{template "children" .}}
</blockquote>
'''
			}
		},
		"ListItem": {
			"type": "hanging",
			"delimiter": "-",
			"templates": {
				"html": '''<li>{{template "children" .}}</li>'''
			}
		},
		"NumberedListItem": {
			"type": "hanging",
			"delimiter": "1.",
			"templates": {
				"html": '''{{template "ListItem" .}}'''
			}
		},
		"PreformattedBlock": {
			"type": "fenced",
			"delimiter": "'",
			"templates": {
				"html": '''
<pre {{- template "HTMLAttributes" .}}>
	{{- template "children" . -}}
</pre>
'''
			}
		},
		"CodeBlock": {
			"type": "fenced",
			"delimiter": "`",
			"templates": {
				"html": '''
<pre {{- template "HTMLAttributes" .}}><code {{- with .Data.openingText}} lang="{{.}}"{{end}}>
	{{- template "children" . -}}
</code></pre>
'''
			}
		},
		"Image": {
			"type": "verbatimLine",
			"delimiter": ".image",
			"templates": {
				"html": '''
<img src="{{trimSpacing .TextContent}}" {{- template "HTMLAttributes" .}}/>
'''
			}
		},
		"Note": {
			"type": "walled",
			"delimiter": "*",
			"templates": {
				"html": '''
<div style="margin-left: 1em;padding-left:1em;border-left:2px solid blue;" {{- template "HTMLAttributes" .}}>
	{{template "children" .}}
</div>'''
			}
		},
		"Term": {
			"type": "hanging",
			"delimiter": "?",
			"templates": {
				"html": '''{{template "children" .}}'''
			}
		},
		"Description": {
			"type": "hanging",
			"delimiter": ":",
			"templates": {
				"html": '''{{template "children" .}}'''
			}
		},
		"Caption": {
			"type": "walled",
			"delimiter": "+",
			"templates": {
				"html": '''{{template "children" .}}'''
			}
		},
		"TableOfContents": {
			"type": "hanging",
			"delimiter": ".toc",
			"doNotRemove": true,
			"templates": {
				"html": '''
<div {{- template "HTMLAttributes" .}}>
	<p>{{template "children" .}}</p>
	{{template "grouper" global.aggregates.sequentialNumbers.numberedHeadings.Group}}
</div>

{{define "grouper"}}
	<ul>
		{{range .}}
			{{if eq (printf "%T" .) "sequentialnumber.group"}}
				{{template "grouper" .}}
			{{else}}
				<li>
					<a href="#{{.ID}}">{{.SequentialNumber}} {{.Text}}</a>
				</li>
			{{end}}
		{{end}}
	</ul>
{{end}}
'''
			}
		},
		"BlockComment": {
			"type": "verbatimWalled",
			"delimiter": "/",
			"templates": {
				"html": ""
			}
		},
		"Attributes": {
			"type": "verbatimWalled",
			"delimiter": "!",
			"templates": {
				"html": ""
			}
		},
		"TextBlock": {
			"type": "leaf",
			"templates": {
				"html": '''
<span {{- template "HTMLAttributes" .}}>
	{{template "children" .}}
</span>
'''
			}
		},

		"Emphasis": {
			"type": "uniform",
			"delimiter": "_",
			"templates": {
				"html": '''<em>{{template "children" .}}</em>'''
			}
		},
		"Strong": {
			"type": "uniform",
			"delimiter": "*",
			"templates": {
				"html": '''<strong>{{template "children" .}}</strong>'''
			}
		},
		"Code": {
			"type": "escaped",
			"delimiter": "`",
			"templates": {
				"html": "<code>{{.TextContent}}</code>"
			}
		},
		"Link": {
			"type": "escaped",
			"delimiter": "[",
			"templates": {
				"html": '''<a href="{{.TextContent}}">{{.TextContent}}</a>'''
			}
		},
		"HTTP": {
			"type": "prefixed",
			"delimiter": "http://",
			"matcher": "url",
			"templates": {
				"html": '''<a href="http://{{.TextContent}}">http://{{.TextContent}}</a>'''
			}
		},
		"HTTPS": {
			"type": "prefixed",
			"delimiter": "https://",
			"matcher": "url",
			"templates": {
				"html": '''<a href="https://{{.TextContent}}">https://{{.TextContent}}</a>'''
			}
		},
		"WWW": {
			"type": "prefixed",
			"delimiter": "www.",
			"matcher": "url",
			"templates": {
				"html": '''<a href="http://www.{{.TextContent}}">www.{{.TextContent}}</a>'''
			}
		},
		"LineBreak": {
			"type": "prefixed",
			"delimiter": "\\",
			"doNotRemove": true,
			"templates": {
				"html": "<br>"
			}
		},
		"Comment": {
			"type": "escaped",
			"delimiter": "/",
			"templates": {
				"html": ""
			}
		},
		"Group": {
			"type": "uniform",
			"delimiter": "(",
			"templates": {
				"html": '''{{template "children" .}}'''
			}
		},
		"Text": {
			"type": "text",
			"templates": {
				"html": "{{.Value}}"
			}
		}
	},
	"groups": {
		"Paragraph": {
			"type": "paragraph",
			"option": "leaf",
			"templates": {
				"html": '''
<p {{- template "HTMLAttributes" .}}>
	{{template "children" .}}
</p>
'''
			}
		},
		"List": {
			"type": "list",
			"element": "ListItem",
			"templates": {
				"html": '''
<ul {{- template "HTMLAttributes" .}}>
	{{template "children" .}}
</ul>
'''
			}
		},
		"NumberedList": {
			"type": "list",
			"element": "NumberedListItem",
			"templates": {
				"html": '''
<ol {{- template "HTMLAttributes" .}}>
	{{template "children" .}}
</ol>
'''
			}
		},
		"TermList": {
			"type": "list",
			"element": "Term",
			"templates": {
				"html": '''
<div {{- template "HTMLAttributes" .}}>
	{{template "children" .}}
</div>
'''
			}
		},
		"DescriptionList": {
			"type": "list",
			"element": "Description",
			"templates": {
				"html": '''
<div {{- template "HTMLAttributes" .}}>
	{{template "children" .}}
</div>
'''
			}
		},
		"StickySubtitle": {
			"type": "sticky",
			"element": "Subtitle",
			"option": "after",
			"templates": {
				"html": '''
{{$subtitle := .LastChild}}
{{$target   := .FirstChild}}
<header {{- template "HTMLAttributes" .}}>
	{{dynamicTemplate $target.Element $target}}
	<p>{{dynamicTemplate $subtitle.Element $subtitle}}</p>
</header>
'''
			}
		},
		"StickyDescription": {
			"type": "sticky",
			"element": "DescriptionList",
			"option": "after",
			"templates": {
				"html": '''
{{$list   := .LastChild}}
{{$target := .FirstChild}}
<dl {{- template "HTMLAttributes" .}}>
	{{range $c := elementChildren $target}}
		<dt>{{dynamicTemplate $target.Element $c}}</dt>
	{{end}}
	{{range $c := elementChildren $list}}
		<dd>{{dynamicTemplate $list.Element $c}}</dd>
	{{end}}
</dl>
'''
			}
		},
		"StickyCaption": {
			"type": "sticky",
			"element": "Caption",
			"option": "after",
			"templates": {
				"html": '''
{{$caption := .LastChild}}
{{$target  := .FirstChild}}
<figure {{- template "HTMLAttributes" .}}>
	{{dynamicTemplate $target.Element $target}}
	<figcaption>
		{{dynamicTemplate $caption.Element $caption}}
	</figcaption>
</figure>
'''
			}
		},
		"StickyAttributes": {
			"type": "sticky",
			"element": "Attributes",
			"templates": {
				"html": '''
{{$attrs  := .FirstChild}}
{{$target := .LastChild}}

{{$attrsMap := parseAttributes $attrs.TextContent}}
{{$_        := setData $target "Attributes" $attrsMap}}

{{dynamicTemplate $target.Element $target}}
'''
			}
		},

		"NamedLink": {
			"type": "sticky",
			"element": "Group",
			"target": "Link",
			"templates": {
				"html": '''
{{$group := .FirstChild}}
{{$link  := .LastChild}}
<a href="{{$link.TextContent}}">
	{{dynamicTemplate $group.Element $group}}
</a>
'''
			}
		}
	},
	"aggregates": {
		"sequentialNumbers": {
			"numberedHeadings": {
				"elements": ["NumberedHeading"]
			}
		}
	}
}
