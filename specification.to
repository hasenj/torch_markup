= Touch Markup (To) Specification

## Introduction

Touch Markup (To) is a lightweight markup language. It uses punctuation characters to inscribe meaning to otherwise plain text.

The grammar is simple to parse, allowing for easy tooling.

### Design Philosophy

__This section is non-normative.__

To is designed to be readable and collaborative. It provides features necessary for most writing work without having to resort to other tools. Notations are simple for humans and computers.

One way to do one thing---To does not permit multiple notations to represent one element.

No modifiers---Modifiers, in whatever form, are not allowed.

Considerate---Use notations for their known meaning and reserve common notations for other tools.

Consistent---Simple rules without exceptions.

Dependable---Release a stable version and promise backward compatibility whenever first possible.

Portable---Available across multiple tools and platforms.

## Conformance Requirements

The keywords “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as described in <BCP 14><https://tools.ietf.org/html/bcp14> [<RFC 2119><https://tools.ietf.org/html/rfc2119>], [<RFC 8174><https://tools.ietf.org/html/rfc8174>] when, and only when, they appear in all capitals as shown here.

Requirements phrased in the imperative as part of algorithms (such as “strip any leading space characters” or “return false and abort these steps”) are to be interpreted with the meaning of the keyword (“MUST”, “SHOULD”, “MAY”, etc.) used in introducing the algorithm.

Conformance requirements phrased as algorithms or specific steps MAY be implemented in any manner, so long as the end result is equivalent. (In particular, the algorithms defined in this specification are intended to be easy to follow and not intended to be performant.)

## Terminology

: EOL
    End of line. Represented as <EOL> in examples.

: EOF
    End of file. Represented as <EOF> in examples. Note that EOF is not a character, it only indicates no more data.

## Notational Conventions

The syntax is specified using <Backus---Naur Form><https://en.wikipedia.org/wiki/Backus%E2%80%93Naur_form> (BNF).

## Source Code Representation

To uses <US-ASCII><https://en.wikipedia.org/wiki/ASCII> character encoding. Source code should be <Unicode><https://en.wikipedia.org/wiki/Unicode> text encoded in <UTF-8><https://en.wikipedia.org/wiki/UTF-8>.

Any sequence of characters is a valid To document.

// The US-ASCII NUL character with hex value 00 (Unicode point U+0000) may be disallowed or replaced for security reasons and compatibility with other tools.
// 
// UTF-8-encoded byte order mark (U+FEFF) may be ignored if it is the first Unicode point in the source text for compatibility with other tools. A byte order mark may be disallowed anywhere else in the source.

### Characters

EOL is the US-ASCII line feed (LF) character with hex value 0A (Unicode point U+000A).

## Syntax

Elements are divided into three categories:
- inline
- line
- block

Inline elements span from the opening delimiter to the closing delimiter, EOL, or EOF, whichever comes first.

``to
Tibsey is a **friendly koala**
Tibsey is a **friendly koala<EOL>
Tibsey is a **friendly koala<EOF>
``

Line elements span from the opening delimiter to the EOL or EOF, whichever comes first.

``to
// comments never hurt anyone<EOL>
- list // a list item<EOF>
``

Block elements span contiguous lines of inline or line content until a blank line or another block.

``to
This paragraph
ends on the next line,
because of a blank line below.

And this paragraph
ends on the next line,
because of a list below.
- milk
``

### Emphasis

Emphasis represents stress or emphasis of its content. Use it only if its absence would change the meaning of the content. Do not use it to convey importance; use strong for that.

``to
Tibsey is a __koala__.
``

| Element category  | inline             |
| Permitted content | strong, link, text |

Emphasis starts with a double underscore followed by zero or more occurrences of strong or text and stops at a double underscore, EOL, or EOF.

### Strong

Strong represents the importance, seriousness, or urgency of its contents. Use it only if its absence would change the meaning of the content. Do not use it to convey stress or emphasis; use emphasis for that.

``to
Climb **faster** Tibsey.
``

| Element category  | inline               |
| Permitted content | emphasis, link, text |

Strong starts with a double asterisk followed by zero or more occurrences of emphasis or text and stops at a double asterisk, EOL, or EOF.

### Paragraph

A paragraph represents a paragraph of content. It is the default block structure.

``to
// first paragraph
Tibsey is eating eucalyptus leaves.

// second paragraph
Tibsey is going shopping.
Tibsey likes to sleep.
``

| Element category  | block                        |
| Permitted content | emphasis, strong, link, text |

Paragraph spans contiguous lines of emphasis, strong, or text until a blank line or another block.

### Headings

Headings represent headings for sections and denote the structure of a document. Heading levels range from 1 to unlimited---level 1 being the most important. Use headings to create a hierarchy. Use them to create nested sections where the heading levels are implicit in the resulting structure. Do not use headings for styling, i.e., to render larger font sizes.

``to
= Koalas

## Introduction

Koalas are not bears---they are marsupials...

## Habitat

Koalas live in the eucalyptus forests of southeastern and eastern Australia. When not sleeping, they are usually eating...

### Australia

// ...
``

* Text in the example above is from <Koala, facts, and photos - National Geographic><https://www.nationalgeographic.com/animals/mammals/k/koala/>.

| Element category  | block                        |
| Permitted content | emphasis, strong, link, text |

#### Unnumbered

Unnumbered headings start with one or more equals signs followed by zero or more occurrences of emphasis, strong, or text and stop at the EOL or EOF.

#### Numbered

Numbered headings automatically apply a numbering scheme to the headings. Numbered heading level 1 is not permitted, because level 1 heading should only be used as a document title for which a number most often is not wanted. Additionally, by not allowing a level 1 heading, numbered headings can be easily discernible from hashtags. 

Numbered headings start with two or more number signs followed by zero or more occurrences of emphasis, strong, or text and stop at the EOL or EOF.

### Links

Links create links to documents, locations in the same document, email addresses, or anything a URL can address.

``to
// link to location in the same document with text "#references"
<#references>

// link to a relative web page with text "Mammals"
<Mammalss></type/mammals>

// link to the National Geographic website with text "Koala, facts, and photos"
<Koala, facts, and photos><https://www.nationalgeographic.com/animals/mammals/k/koala/>

// link to email with text "mailto:tibsey@koala.test"
<mailto:tibsey@koala.test>
``

| Element category  | inline                 |
| Permitted content | emphasis, strong, text |

Links consist of a link destination and an optional link text. The link destination is used as the link text if the link text is not present. The link text must be placed right after the link destination if they are both present.

The link destination starts with a less-than sign followed by zero or more occurrences of text and stops at a greater-than sign, EOL, or EOF.

The link text starts with a less-than sign followed by zero or more occurrences of emphasis, strong, or text and stops at a greater-than sign, EOL, or EOF.

Greater-than sign is not permitted as content in either link destination or link text. To avoid unexpected links use percent-encoded URLs. '>' can be percent-encoded as '%3E'.

### Code Blocks

Code blocks represent computer code.

```to
``ts
function displayButton(): void {
    const button = document.querySelector("button")
    button.style.display = "block"
    // ...
``
```

| Element category  | block  |
| Permitted content | text   |

Code blocks start with two or more occurrences of backticks followed by optional metadata which MUST be on the same line. Next is the code block body which consists of zero or more lines of text. Finally, the code block is closed on a line after the code block body with greater than or equal to the number of backticks used in the opening delimiter.

Metadata consists of a language used in the code block body and an optional filename. The language is usually used for syntax highlighting and the filename may be used in the presentation of the code block.
